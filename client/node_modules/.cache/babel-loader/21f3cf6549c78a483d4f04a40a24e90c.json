{"ast":null,"code":"var _jsxFileName = \"D:\\\\banhducnong\\\\Study\\\\cpsc471\\\\CPSC471_Project\\\\client\\\\src\\\\components\\\\BugsPage\\\\BugsPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./BugsPage.css\";\nimport Popup from \"../CreateBug/CreateBug\";\nimport DetailPopup from \"../BugDetail/BugDetail\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BugsPage = _ref => {\n  _s();\n\n  let {\n    bugs\n  } = _ref;\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [getBugs, setGetBugs] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [isDetail, setIsDetail] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [priority, setPriority] = useState(\"\");\n  const [deadline, setDeadline] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n\n  const reportBug = async e => {\n    e.preventDefault();\n    fetch(\"http://localhost:5000/bugs\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name,\n        description,\n        priority,\n        deadline,\n        status\n      })\n    });\n  };\n\n  const togglePopup = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const toggleDetail = () => {\n    setIsDetail(!isDetail);\n  };\n\n  useEffect(() => {\n    fetch(\"http://localhost:5000/bugs\").then(res => res.json()).then(bug => {\n      setIsLoaded(true);\n      setGetBugs(bug);\n    });\n  });\n  var index = 1;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bugs-wrapper\",\n    children: bugs ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: bugs.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Bugs reported:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          start: index,\n          children: getBugs.map(bug => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              children: [bug._id, \" \", ' - ', \" \", bug.name, \" \", ' - ', \" \", bug.status]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"viewDetail\",\n              type: \"button\",\n              value: bug._id + \" - \" + bug.name + \" - \" + bug.status,\n              onClick: toggleDetail\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this)]\n          }, bug.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), isDetail && /*#__PURE__*/_jsxDEV(DetailPopup, {\n        content: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Bug's detail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this), getBugs.map(bug => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [bug._id, \" \", bug.name, \" \", bug.description, \" \", bug.priority, \" \", bug.deadline, \" \", bug.status]\n          }, bug.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true),\n        handleClose: toggleDetail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Report new bug\",\n        onClick: togglePopup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this), isOpen && /*#__PURE__*/_jsxDEV(Popup, {\n        content: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Report a new bug\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Enter details about new bugs here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: reportBug,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Bug name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: name,\n              onChange: e => setName(e.target.value),\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Bug description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: description,\n              onChange: e => setDescription(e.target.value),\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Bug priority\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: priority,\n              onChange: e => setPriority(e.target.value),\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Bug deadline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: deadline,\n              onChange: e => setDeadline(e.target.value),\n              type: \"date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Bug status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: status,\n              onChange: e => setStatus(e.target.value),\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"button\",\n              type: \"Report\",\n              value: \"Report\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true),\n        handleClose: togglePopup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"There is no bug\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BugsPage, \"Tk1PbhXxUCjuwgzKUqdbAr7+Avs=\");\n\n_c = BugsPage;\nexport default BugsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BugsPage\");","map":{"version":3,"sources":["D:/banhducnong/Study/cpsc471/CPSC471_Project/client/src/components/BugsPage/BugsPage.js"],"names":["React","useEffect","useState","Popup","DetailPopup","BugsPage","bugs","isLoaded","setIsLoaded","getBugs","setGetBugs","isOpen","setIsOpen","isDetail","setIsDetail","name","setName","description","setDescription","priority","setPriority","deadline","setDeadline","status","setStatus","reportBug","e","preventDefault","fetch","method","headers","body","JSON","stringify","togglePopup","toggleDetail","then","res","json","bug","index","map","_id","id","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport \"./BugsPage.css\";\r\n\r\nimport Popup from \"../CreateBug/CreateBug\";\r\nimport DetailPopup from \"../BugDetail/BugDetail\";\r\n\r\n\r\nconst BugsPage = ({ bugs }) => {\r\n\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [getBugs, setGetBugs] = useState([]);\r\n    \r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [isDetail, setIsDetail] = useState(false);\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [priority, setPriority] = useState(\"\");\r\n    const [deadline, setDeadline] = useState(\"\");\r\n    const [status, setStatus] = useState(\"\");\r\n \r\n    const reportBug = async (e) => {\r\n        e.preventDefault();\r\n\r\n        fetch(\"http://localhost:5000/bugs\", {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n            name,\r\n            description,\r\n            priority,\r\n            deadline,\r\n            status\r\n        }),\r\n    });\r\n  };\r\n\r\n    const togglePopup = () => {\r\n        setIsOpen(!isOpen);\r\n    }\r\n\r\n    const toggleDetail = () => {\r\n        setIsDetail(!isDetail);\r\n    }\r\n\r\n    useEffect(() => {\r\n          fetch(\"http://localhost:5000/bugs\")\r\n            .then((res) => res.json())\r\n            .then(\r\n                (bug) => {\r\n                    setIsLoaded(true);\r\n                    setGetBugs(bug);\r\n                }\r\n            );\r\n    });\r\n\r\n    var index = 1;\r\n\r\n    return (\r\n        <div className=\"bugs-wrapper\">\r\n            {bugs ? (\r\n                <div>\r\n                    <h2>{bugs.name}</h2>\r\n                    <p>Bugs reported:</p>\r\n                    <nav>\r\n                        <ol start={index}>\r\n                            {getBugs.map(bug => (\r\n                            <li key={bug.id}>\r\n                                <button>\r\n                                {bug._id} {' - '} {bug.name} {' - '} {bug.status}\r\n                                </button>\r\n                                <input className=\"viewDetail\"\r\n                                    type=\"button\"\r\n                                    value= {bug._id + \" - \" + bug.name + \" - \" + bug.status}\r\n                                    onClick={toggleDetail}\r\n                                />\r\n                            </li>\r\n                            ))}\r\n                        </ol>\r\n                    </nav>\r\n                    {isDetail && <DetailPopup\r\n                        content={<>\r\n                            <b>Bug's detail</b>\r\n                            {getBugs.map(bug => (\r\n                                <li key={bug.id}>\r\n                                    {bug._id} {bug.name} {bug.description} {bug.priority} {bug.deadline} {bug.status}\r\n                                </li>\r\n                            ))}\r\n                        </>}\r\n                        handleClose={toggleDetail}\r\n                    />}\r\n                    <input\r\n                        type=\"button\"\r\n                        value=\"Report new bug\"\r\n                        onClick={togglePopup}\r\n                    />\r\n                    {isOpen && <Popup\r\n                        content={<>\r\n                            <b>Report a new bug</b>\r\n                            <p>Enter details about new bugs here</p>\r\n                            <form onSubmit={reportBug}>\r\n                                <p>Bug name</p>\r\n                                <input\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                                type=\"text\"\r\n                                />\r\n                                <p>Bug description</p>\r\n                                <input\r\n                                value={description}\r\n                                onChange={(e) => setDescription(e.target.value)}\r\n                                type=\"text\"\r\n                                />\r\n                                <p>Bug priority</p>\r\n                                <input\r\n                                value={priority}\r\n                                onChange={(e) => setPriority(e.target.value)}\r\n                                type=\"text\"\r\n                                />\r\n                                <p>Bug deadline</p>\r\n                                <input\r\n                                value={deadline}\r\n                                onChange={(e) => setDeadline(e.target.value)}\r\n                                type=\"date\"\r\n                                />\r\n                                <p>Bug status</p>\r\n                                <input\r\n                                value={status}\r\n                                onChange={(e) => setStatus(e.target.value)}\r\n                                type=\"text\"\r\n                                />\r\n                                <br />\r\n                                <input className=\"button\" type=\"Report\" value=\"Report\" />\r\n                            </form>\r\n                        </>}\r\n                        handleClose={togglePopup}\r\n                    />}\r\n                </div>\r\n            ) : (\r\n                <h2>There is no bug</h2>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BugsPage;\r\n"]},"metadata":{},"sourceType":"module"}